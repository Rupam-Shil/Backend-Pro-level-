openapi: 3.0.0
info:
  title: learn express and swagger - Rupam SHil
  description: A course segment about writing docs
  version: 1.0.1
  contact:
    email: info@swaggerdoc.com
    url: 'http://github.com'

# servers:
#   - url: 'https://localhost:4000/api/v1'
#     description: for local host - secure
#   - url: 'http://localhost:4000/api/v1'
#     description: for local host - regular

servers:
  - url: '{protocol}://localhost:4000/api/{version}'
    description: for local host - secure
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /rupam:
    get:
      tags:
        - String
      summary: returns a greet message from lco
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: string
                example: 'mystring'
        400:
          description: Bad request

  /rupamobject:
    get:
      tags:
        - Object
      summary: returns a unique course
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number

        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /courses:
    get:
      tags:
        - Array
      summary: returns all the courses
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number

        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /mycourse/{courseId}:
    get:
      tags:
        - Object
      summary: returns course based on return id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 11
          schema:
            type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number

        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
